PRAGMA foreign_keys=OFF;

BEGIN TRANSACTION;

CREATE TABLE raw_contacts 
(
	_id INTEGER PRIMARY KEY AUTOINCREMENT,
	is_restricted INTEGER DEFAULT 0,
	account_name STRING DEFAULT NULL, 
	account_type STRING DEFAULT NULL, 
	sourceid TEXT,
	version INTEGER NOT NULL DEFAULT 1,
	dirty INTEGER NOT NULL DEFAULT 0,
	deleted INTEGER NOT NULL DEFAULT 0,
	contact_id INTEGER REFERENCES contacts(_id),
	aggregation_mode INTEGER NOT NULL DEFAULT 0,
	aggregation_needed INTEGER NOT NULL DEFAULT 1,
	custom_ringtone TEXT,
	send_to_voicemail INTEGER NOT NULL DEFAULT 0,
	times_contacted INTEGER NOT NULL DEFAULT 0,
	last_time_contacted INTEGER,
	starred INTEGER NOT NULL DEFAULT 0,
	display_name TEXT,
	display_name_alt TEXT,
	display_name_source INTEGER NOT NULL DEFAULT 0,
	phonetic_name TEXT,
	phonetic_name_style TEXT,
	sort_key TEXT COLLATE PHONEBOOK,
	sort_key_alt TEXT COLLATE PHONEBOOK,
	name_verified INTEGER NOT NULL DEFAULT 0,
	contact_in_visible_group INTEGER NOT NULL DEFAULT 0,
	sync1 TEXT, 
	sync2 TEXT, 
	sync3 TEXT, 
	sync4 TEXT 
);

INSERT INTO "raw_contacts" VALUES(1,0,NULL,NULL,NULL,2,1,0,1,0,0,NULL,0,0,NULL,0,'FName LName','LName, FName',40,NULL,'0','FName LName','LName, FName',0,1,NULL,NULL,NULL,NULL);
INSERT INTO "raw_contacts" VALUES(2,0,NULL,NULL,NULL,2,1,0,2,0,0,NULL,0,0,NULL,0,'Test Test_Family_Name','Test_Family_Name, Test',40,NULL,'0','Test Test_Family_Name','Test_Family_Name, Test',0,1,NULL,NULL,NULL,NULL);
INSERT INTO "raw_contacts" VALUES(3,0,NULL,NULL,NULL,2,1,0,3,0,0,NULL,0,0,NULL,0,'Федор Сергеевич Михайлов','Михайлов, Федор Сергеевич',40,NULL,'0','Федор Сергеевич Михайлов','Михайлов, Федор Сергеевич',0,1,NULL,NULL,NULL,NULL);
INSERT INTO "raw_contacts" VALUES(4,0,NULL,NULL,NULL,2,1,0,4,0,0,NULL,0,0,NULL,0,'Cay Horstmann','Horstmann, Cay',40,NULL,'0','Cay Horstmann','Horstmann, Cay',0,1,NULL,NULL,NULL,NULL);

CREATE INDEX raw_contacts_contact_id_index ON raw_contacts (contact_id);
CREATE INDEX raw_contacts_source_id_index ON raw_contacts (sourceid, account_type, account_name);
CREATE TRIGGER raw_contacts_deleted    BEFORE DELETE ON raw_contacts BEGIN    DELETE FROM data     WHERE raw_contact_id=OLD._id;   DELETE FROM agg_exceptions     WHERE raw_contact_id1=OLD._id        OR raw_contact_id2=OLD._id;   DELETE FROM contacts     WHERE _id=OLD.contact_id       AND (SELECT COUNT(*) FROM raw_contacts            WHERE contact_id=OLD.contact_id           )=1; END;
CREATE TRIGGER raw_contacts_marked_deleted    AFTER UPDATE ON raw_contacts BEGIN    UPDATE raw_contacts     SET version=OLD.version+1      WHERE _id=OLD._id       AND NEW.deleted!= OLD.deleted; END;
CREATE INDEX raw_contact_sort_key1_index ON raw_contacts (contact_in_visible_group,sort_key);
CREATE INDEX raw_contact_sort_key2_index ON raw_contacts (contact_in_visible_group,sort_key_alt);

COMMIT;
